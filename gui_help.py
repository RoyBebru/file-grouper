#!/usr/bin/python3

import wx
import wx.html
import webbrowser
import os

HTML = """
<h1>File Grouper</h1>
<hr/>
<table width="100%">
  <tr>
    <td width="25%"valign="top">
      <ol>
        <li><a href="#task">Призначення</a></li>
        <li><a href="#desc-cli">Командний рядок</a></li>
        <li><a href="#desc-gui">Діалоговий режим</a></li>
        <li><a href="https://uk.wikipedia.org/wiki/%D0%9B%D1%96%D1%86%D0%B5%D0%BD%D0%B7%D1%96%D1%8F_MIT">Ліцензія</a></li>
        <li><a href="#faq">ЧаПи</a></li>
      </ol>
    </td>
    <td width="75%">

      <a name="#task"></a>

      <h2>Призначення програми</h2>
      <p>У багатьох на робочому столі є папка, яка називається якось на зразок "Розібрати".
      Як правило, розібрати цю папку руки ніколи так і не доходять.</p>

      <p>Ця програма розбере цю папку. Для цього додаток перевіряє розширення файлу і,
      залежно від розширення, приймає рішення, до якої категорії віднести цей файл.</p>

      <p>Скрипт проходить по вказаній теці та сортирувати всі файли по групам:
      <ul>
        <li>зображення ('JPEG', 'PNG', 'JPG', 'SVG', ...);</li>
        <li>відео файли ('AVI', 'MP4', 'MOV', 'MKV', ...);</li>
        <li>документи ('DOC', 'DOCX', 'TXT', 'PDF', 'XLSX', 'PPTX', ...);</li>
        <li>музика ('MP3', 'OGG', 'WAV', 'AMR', ...);</li>
        <li>архіви ('ZIP', 'GZ', 'TAR', ...);</li>
        <li>невідомі розширення.</li>
      </ul></p>

      <p>Програма може працювати:
      <ol>
        <li><a href="#desc-cli">У командному рядку</a></li>
        <li><a href="#desc-gui">В діалоговому режимі</a></li>
      </ul></p>

      <a name="#desc-cli"></a>

      <h2>Робота з програмою у командному рядку</h2>
      <p>Додаток, що викликаний без параметрів, намагається запусти графічний діалог для
      візуального відображення та вибору теки, яку треба переглядати та теки, в якій буде
      знаходитися результат, тощо. Для того, щоб заборонити запуск додатку у діалоговому режимі,
      треба скористатися опцією <b><font color="#990000">-G/--no-gui</font></b>.</p>

      <p>Для коректної роботи програми у командному рядку треба задати теку, в якій буде
      зберігатися результат. Для цього слугує опція <b><font color="#990000">-d/--dir</font></b>.
      Разом з цією опцію треба вказати теку, що інспектується (продивляється) у якості
      вільного параметра командного рядка.</p>

      <p>Переміщення файлів може бути небезпечною дією, оскільки файли з різними розширеннями
      можуть бути взаємозалежними і їх переміщення у різні теки може призвести до втрати
      цілістності інформаційного об'єкту. Наприклад, тека з html-сторінкою, як правило, містить
      графічні файли оформлення та інші файли. Переміщення їх у різні теки з можливим перейменуванням
      призведе до часткової або повної непрацездатності через руйнацію структурних посилань.
      Щоб запобігти цьому слід скористатися опцією <b><font color="#990000">-l/--links</font></b>,
      яка не переміщає і не транслітерує файли, а створює посилання на них (у Windows це фізичні
      посилання, у Unix-подібних системах, в тому числі MacOS X, це символьні посилання). Після
      оцінки результату можна прийняти зважене остаточне рішення.</p>
      <a name="#desc-cli"></a>

      <p>Опція <b><font color="#990000">-t/--types</font></b> дозволяє взнати налаштування
      параметрів сортування по категоріальним текам.</p>

      <p>Опція <b><font color="#990000">-h/--help</font></b> друкує коротку інформацію про
      можливі параметри використання додатку.</p>

      <a name="#desc-gui"></a>

      <h2>Робота з програмою у діалоговому режимі</h2>
      <p>При спробі запуститися у діалоговому режимі додаток перевіряє наявність встановленого модуля
      <a href="https://www.wxpython.org/pages/downloads/">wxPython</a>. Модуль
      <b><font color="#990000">wxPython</font></b> при установці середовища підтримки мови
      <b><font color="#990000">python</font></b> не встановлюється за замовчуванням. У випадку
      відсутності модуля додаток повідомить про це. Треба або встановити відсутній модуль, або
      працювати тільки через командний рядок.</p>

      <p>
        Головне вікно додатку має вигляд <i>Рис.1</i>.
        <center>
          <table width="1" border="5">
            <tr>
              <td><img src="help-program-window.png" alt="Main Program Window" width="539" height="397"></td>
            </tr>
          </table>
          <br/>
          <i>Рис.1</i> Головне вікно додатку
        </center>
        <ol>
          <li>
            Кнопка запуску стандартного діалогу вибору теки. Зліва знаходиться вибір теки
            для інспекції. Вона має існувати. Зправа - тека результату. Якщо вона чи якісь
            її підтеки відсутні - вони мають створитися.
          </li>
          <li>Вміст теки для інспекції після вибору відобразиться у вигляді дерева.</li>
          <li>Вміст теки результату відобразиться у вигляді дерева.</li>
          <li>
            Вибрати теку можна не тільки через стандартний діалог, а й задати чи
            скорегувати у тестовому полі.
          </li>
          <li>Режим роботи без видалення файлів, а створення посилань визначається цим прапорцем.</li>
          <li>Поле, де виводяться підказки, що робити далі.</li>
          <li>Стандартне меню.</li>
          <li>Кнопка запуску, яка стає активною після коректного вибору параметрів роботи.</li>
        </ol>
      </p>

      <a name="#faq"></a>

      <h2><b><font color="#990000">Ча</font></b>сті <b><font color="#990000">пи</font></b>тання</h2>
      <h4><font color="#990000">Структура теки може мати не тільки дереводібну структуру,
      а й мати цикли. Чи не станеться помилка?</font></h4>
      <p>Ні, помилки не станеться, програма вміє обходити цикли без зациклювання.</p>

      <h4><font color="#990000">Файли в різних теках можуть мати однакові імена. Як
      програма зможе скласти їх в одну теку відповідної категорії?</font></h4>
      <p>Програма додає до імені номер версії, що робить їх унікальними.</p>

      <h4><font color="#990000">Файлова система NTFS дозволяє в одному файлі зберігати
      декілька потоків. Фактично, це різні файли з одним іменем. Чи збережуться вони?</font></h4>
      <p>Програма переміщає файли, а не копіює їх вичитуванням і записом. Тому потоки файлів
      в NTFS мають зберегтися.</p>

      <h4><font color="#990000">А чи дійсно корисна така програма?</font></h4>
      <p>Нажаль, ні. Інформаційні об'єкти, як правило, складаються з багатьох файлів,
      особливо в Unix-подібних операційних системах. Наприклад, книга в форматі html
      зберігається у теці з підтеками для картинок книги, шрифтами, відео, тощо. Такий підхід
      сортування перемістить файли книги у різні теки категорій, можливо перейменувавши їх.
      Це зруйнує структуру посилань у книзі, зробить її нечитабельною.</p>

      <h4><font color="#990000">Яка мета створення програми?</font></h4>
      <p>Програма є корисним каркасом для інших програм на мові Python.</p>

      <h4><font color="#990000">Якщо знайдена помилка, куди звертатися?</font></h4>
      <p>Пишіть <a href="mailto:RoyBebru@gmail.com">RoyBebru@gmail.com</a>.
      А найкраще спробуйте виправити самі і повідомте мені. Наперед дякую.</p>
    </td>
  </tr>
</table>
"""

class HelpWindow(wx.Frame):

    def __init__(self, *args, **kw):

        # Ensure the parent's __init__ is called
        super(HelpWindow, self).__init__(*args, **kw, size=(1024, 768))

        self.SetSizeHints(400,300,-1,-1)

        pnl = wx.Panel(self)

        txt_style = wx.html.HW_SCROLLBAR_AUTO|wx.TE_READONLY|wx.BORDER_SIMPLE
        self.html = wx.html.HtmlWindow(pnl, -1, style=txt_style)
        self.html.SetPage(HTML)
        self.html.Bind(wx.html.EVT_HTML_LINK_CLICKED, self.OnLinkClicked)
        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer.Add(self.html, 1, wx.ALL|wx.EXPAND, 10)
        pnl.SetSizer(sizer)

    def OnLinkClicked(self, link):
        info = link.GetLinkInfo()
        href = info.GetHref()
        if href.startswith('#'):
            self.html.ScrollToAnchor(href)
        else:
            yesno = wx.MessageDialog(
                None,
                _("Link") + os.linesep + f"{href}" + os.linesep +
                _("will be opened in your standard web browser. Continue?"),
                _("Confirm"),
                wx.YES_NO | wx.NO_DEFAULT | wx.ICON_QUESTION).ShowModal()

            if yesno == wx.ID_YES:
                webbrowser.open(href)


if __name__ == '__main__':
    _ = lambda _: _
    app = wx.App()
    frm = HelpWindow(None, title="Debug Help Window")
    frm.Show()
    app.MainLoop()
